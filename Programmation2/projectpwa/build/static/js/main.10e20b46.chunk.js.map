{"version":3,"sources":["img/pwa.png","components/BoutonInstallPWA.js","constantes.js","components/Rapports.js","components/Accueil.js","components/MenuSansPostBack.js","components/FormAjoutRappVoyage.js","components/FormEditerRapport.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BoutonInstallPWA","Button","variant","size","block","id","API","Rapports","props","CardGroup","Card","Img","src","this","imageURL","rounded","width","Body","to","titre","Subtitle","nouvelle","Text","className","utilisateur","React","Component","Accueil","state","donneesRecues","fetch","response","json","reponseDeApi","setState","ok","Error","statusText","console","log","Container","Row","map","key","i","_id","MenuSansPostBack","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","exact","FormAjoutRappVoyage","photo","setErrors","handleAdd","bind","handlePhoto","addRapport","local","rapporVoyage","method","headers","body","JSON","stringify","jsonResponse","history","push","toast","success","event","preventDefault","document","getElementById","value","photos","Col","Form","Group","controlId","Label","Control","type","placeholder","onBlur","Image","onClick","FormEditerRapports","useState","setDonneesRecues","location","search","substring","length","voyageID","setImage","a","image","error","useEffect","getVoyageInfos","defaultValue","images","editVoyage","App","path","component","FormEditerRapport","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,iC,kGCW5BC,MARf,WACE,OACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,OAAK,EAACC,GAAG,iBAA7C,4B,wDCLSC,EAAM,sE,wCCMNC,G,MAAb,kDACE,WAAYC,GAAQ,uCACZA,GAFV,qDAMI,OACE,kBAACC,EAAA,EAAD,KACM,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUT,QAAQ,MAAMU,IAAKC,KAAKL,MAAMM,SAAUC,SAAO,EAACC,MAAM,QAChE,kBAACN,EAAA,EAAKO,KAAN,KACE,kBAAC,IAAD,CAAMC,GAAI,YAAaL,KAAKL,MAAMW,MAAQ,OAASN,KAAKL,MAAMH,IAC1D,kBAACK,EAAA,EAAKU,SAAN,KAAgBP,KAAKL,MAAMa,UAC3B,kBAACX,EAAA,EAAKY,KAAN,CAAWC,UAAU,gBAAgBV,KAAKL,MAAMgB,qBAbpE,GAA8BC,IAAMC,YCDvBC,EAAb,kDACE,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,MAAQ,CAAEC,cAAe,IAFb,EADrB,2MAS6BC,MAAMxB,GATnC,cASYyB,EATZ,gBAUiCA,EAASC,OAV1C,UAUYC,EAVZ,OAWMpB,KAAKqB,SAAS,CAAEL,cAAeI,IACxBF,EAASI,GAZtB,uBAagBC,MAAML,EAASM,YAb/B,0DAgBQC,QAAQC,IAAR,MAhBR,+IAqBI,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAIlB,UAAU,mBAAd,wBAEF,kBAACkB,EAAA,EAAD,KACC5B,KAAKe,MAAMC,cAAca,KAAI,SAACC,EAAIC,GAAL,OAC1B,kBAAC,EAAD,CACQzB,MAAOwB,EAAIxB,MACXd,GAAIsC,EAAIE,IACRF,IAAKA,EAAIxB,MAAQwB,EAAIE,IACrBrB,YAAamB,EAAInB,YACjBH,SAAUsB,EAAItB,SACdP,SAAU6B,EAAI7B,oBAlClC,GAA6BW,IAAMC,W,gBCDtBoB,EAAb,kDACE,WAAYtC,GAAQ,uCACZA,GAFV,qDAOI,OACE,oCACE,kBAACuC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,QAAQhD,QAAQ,SACxD,kBAAC6C,EAAA,EAAOI,MAAR,CAAcC,KAAK,YAAnB,aACA,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBlD,GAAG,yBACpB,kBAACmD,EAAA,EAAD,CAAKjC,UAAU,WACX,kBAAC,IAAD,CAAUA,UAAU,OAAOkC,OAAK,EAACvC,GAAG,KAApC,WACA,kBAAC,IAAD,CAAUK,UAAU,OAAOL,GAAG,wBAA9B,kBACA,kBAAC,IAAD,CAAUK,UAAU,OAAOL,GAAG,sBAA9B,iBACA,kBAAC,IAAD,CAAUK,UAAU,OAAOL,GAAG,eAA9B,gBAjBZ,GAAsCO,IAAMC,W,wCCE/BgC,EAAb,kDACE,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,MAAQ,CAAC+B,MAAO,GAAIC,UAAY,IAErC,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAND,EADrB,gGAUmB3C,EAAOL,EAAUmD,EAAOC,GAV3C,kGAY6BpC,MAAMxB,EAAK,CAChC6D,OAAO,OACPC,QAAS,CAAC,eAAgB,oBAC1BC,KAAKC,KAAKC,UAAU,CAClBpD,MAAOA,EACPL,SAAUA,EACVoD,aAAcA,EACd7C,SAAU4C,MAnBpB,YAYYlC,EAZZ,QAsBkBI,GAtBlB,iCAuBmCJ,EAASC,OAvB5C,cAuBcwC,EAvBd,OAwBQ3D,KAAKL,MAAMiE,QAAQC,KAAK,KACxBC,IAAMC,QAAQ,oBAAsBzD,GAzB5C,kBA2BeqD,GA3Bf,cA6BY,IAAIpC,MAAM,mBA7BtB,kCAgCME,QAAQC,IAAR,MAhCN,uJAqCYsC,GACRA,EAAMC,iBAEN,IAAM3D,EAAQ4D,SAASC,eAAe,SAASC,MACzCnE,EAAWiE,SAASC,eAAe,YAAYC,MAC/C5D,EAAW0D,SAASC,eAAe,YAAYC,MAC/Cf,EAAea,SAASC,eAAe,gBAAgBC,MAE7DpE,KAAKmD,WAAW7C,EAAQL,EAAUO,EAAU6C,KA7ChD,kCAgDcW,GACV,IAAMK,EAASH,SAASC,eAAe,aAAaC,MACpDpE,KAAKqB,SAAU,CAAEpB,SAAWoE,MAlDhC,+BAwDI,OADA5C,QAAQC,IAAI1B,KAAKL,MAAMiE,SAErB,oCACA,kBAACjC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACpB,kBAACF,EAAA,EAAKG,MAAN,gCACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,qBAExC,kBAACN,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACF,EAAA,EAAKG,MAAN,0CACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,wBAAwBC,OAAQ9E,KAAKkD,eAEpD,KAAxBlD,KAAKe,MAAMd,UAAmB,kBAAC8E,EAAA,EAAD,CAAOhF,IAAKC,KAAKe,MAAMd,SAAUC,SAAO,EAACC,MAAM,QAC9E,kBAACoE,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,kDAExC,kBAACN,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACF,EAAA,EAAKG,MAAN,0CACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,oCAG1C,kBAACzF,EAAA,EAAD,CAAQC,QAAQ,UAAUuF,KAAK,SAASI,QAAShF,KAAKgD,WAAtD,wBAhFZ,GAAyCpC,IAAMC,W,QC4H9BoE,MA5HjB,SAA4BtF,GAAO,IAAD,EACWuF,mBAAS,CAAC5E,MAAO,GAAIL,SAAU,GAAIO,SAAW,GAAIG,YAAa,GAAI0C,aAAc,KAD5F,mBACzBrC,EADyB,KACTmE,EADS,OAECD,mBAASvF,EAAMyF,SAASC,OAAOC,UAAU,EAAE3F,EAAMyF,SAASC,OAAOE,SAFlE,mBAEzBC,EAFyB,aAGJN,mBAAS,KAHL,mBAGhBO,GAHgB,uDAUhC,8BAAAC,EAAA,+EAG2BzE,MAAMxB,EAAM+F,GAHvC,cAGUtE,EAHV,gBAI+BA,EAASC,OAJxC,UAIUC,EAJV,OAKI+D,EAAiB/D,GACZF,EAASI,GANlB,uBAOYC,MAAML,EAASM,YAP3B,0DAUIC,QAAQC,IAAR,MAVJ,2DAVgC,kEAwBhC,WAA0BpB,EAAMqF,EAAMnF,EAASG,EAAY0C,GAA3D,eAAAqC,EAAA,+EAE2BzE,MAAMxB,EAAM+F,EAAU,CAC3ClC,OAAO,MACPC,QAAS,CAAC,eAAgB,oBAC1BC,KAAKC,KAAKC,UAAU,CAClBpD,MAAOA,EACPL,SAAU0F,EACVhF,YAAaA,EACb0C,aAAcA,MATtB,YAEUnC,EAFV,QAYgBI,GAZhB,uBAaM3B,EAAMiE,QAAQC,KAAK,KACnBC,IAAMC,QAAQ,yBAA2BzD,GAd/C,kBAgBaY,GAhBb,aAkBU,IAAIK,MAAM,mBAlBpB,kCAqBIE,QAAQC,IAAR,MArBJ,2DAxBgC,kEAiDlC,4BAAAgE,EAAA,+EAE2BzE,MAAMxB,EAAM+F,EAAU,CAC3ClC,OAAO,WAHb,YAEUpC,EAFV,QAKgBI,GALhB,uBAOM3B,EAAMiE,QAAQC,KAAK,KACnBC,IAAM8B,MAAM,yBARlB,kBAUa1E,GAVb,aAYU,IAAIK,MAAM,mBAZpB,kCAeIE,QAAQC,IAAR,MAfJ,2DAjDkC,sBAoF9B,OA/EFmE,qBAAU,YALsB,mCAM9BC,KACA,IA8EE,oCACA,kBAACnE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKG,MAAN,qBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOmB,aAAc/E,EAAcV,QAFxD,KAIA,kBAACiE,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKG,MAAN,0CACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,wBAAwBC,OAhB5E,SAAqBd,GACnB,IAAMgC,EAAS9B,SAASC,eAAe,eAAeC,MACtDqB,EAASO,IAcsFD,aAAc/E,EAAcf,YAErF,KAA3Be,EAAcf,UAAmB,kBAAC8E,EAAA,EAAD,CAAOhF,IAAKiB,EAAcf,SAAUC,SAAO,EAACC,MAAM,QACpF,kBAACoE,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,wBAAyBkB,aAAc/E,EAAcR,YAE7F,kBAAC+D,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,EAAA,EAAKG,MAAN,6BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,+BAAgCkB,aAAc/E,EAAcL,eAEpG,kBAAC4D,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,EAAA,EAAKG,MAAN,8BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,wBAAwBkB,aAAc/E,EAAcqC,eAF5F,KAKF,kBAACjE,EAAA,EAAD,CAAQC,QAAQ,UAAUuF,KAAK,SAASI,QA5ClD,SAAoBhB,GAClBA,EAAMC,iBArEwB,4CA6E/BgC,CANe/B,SAASC,eAAe,eAAeC,MACvCF,SAASC,eAAe,eAAeC,MACpCF,SAASC,eAAe,qBAAqBC,MAC1CF,SAASC,eAAe,qBAAqBC,MAC5CF,SAASC,eAAe,iBAAiBC,SAqCtD,kBAMF,uBAAG1D,UAAU,sBAAsBsE,QAtHX,4CAsHxB,uB,OCnGKkB,MAZf,WACE,OACA,oCACE,kBAAC,EAAD,MACE,kBAAC,IAAD,CAAOC,KAAK,IAAIvD,OAAK,EAACwD,UAAWtF,IACjC,kBAAC,IAAD,CAAOqF,KAAK,uBAAuBC,UAAWvD,IAC9C,kBAAC,IAAD,CAAOsD,KAAK,qBAAqBC,UAAWC,IAC9C,kBAAC,EAAD,QCREC,EAAcC,QACW,cAA7BC,OAAOpB,SAASqB,UAEe,UAA7BD,OAAOpB,SAASqB,UAEhBD,OAAOpB,SAASqB,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrG,QACf+F,UAAUC,cAAcQ,YAI1B9F,QAAQC,IACN,iHAKEmF,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBzF,QAAQC,IAAI,sCAGRmF,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAA9B,GACLnE,QAAQmE,MAAM,4CAA6CA,MCzFjE+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJ3D,SAASC,eAAe,SDSnB,SAAkB0C,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,IAAwBvB,OAAOpB,SAAS7C,MACpDyF,SAAWxB,OAAOpB,SAAS4C,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMmB,IAAN,sBAEPzB,IAgEV,SAAiCM,EAAOC,GAEtC5F,MAAM2F,EAAO,CACXrD,QAAS,CAAE,iBAAkB,YAE5B0D,MAAK,SAAA/F,GAEJ,IAAMgH,EAAchH,EAASqC,QAAQ4E,IAAI,gBAEnB,MAApBjH,EAASkH,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAMrB,MAAK,SAAAC,GACjCA,EAAaqB,aAAatB,MAAK,WAC7BT,OAAOpB,SAASoD,eAKpB7B,EAAgBC,EAAOC,MAG1Ba,OAAM,WACLjG,QAAQC,IACN,oEAvFA+G,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAMrB,MAAK,WACjCxF,QAAQC,IACN,iHAMJiF,EAAgBC,EAAOC,OC/B/BE,K","file":"static/js/main.10e20b46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pwa.3abe438f.png\";","import React, { useState, useEffect } from \"react\";\r\nimport Button from 'react-bootstrap/Button';  \r\n\r\nfunction BoutonInstallPWA() {\r\n  return (\r\n    <Button variant=\"primary\" size=\"lg\" block id=\"boutonInstall\">\r\n      Installer l'application\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default BoutonInstallPWA;\r\n","export const API = \"https://crudcrud.com/api/d2aeca13f99f4360940ac77caea001e2/rapports/\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardGroup from \"react-bootstrap/CardGroup\";\r\nimport '../App.sass'\r\n\r\nexport class Rapports extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n      <CardGroup>\r\n            <Card > \r\n              <Card.Img variant=\"top\" src={this.props.imageURL} rounded width=\"125\" />       \r\n              <Card.Body>\r\n                <Link to={\"Rapports/\"+ this.props.titre + \"?id=\" + this.props.id}>\r\n                    <Card.Subtitle>{this.props.nouvelle}</Card.Subtitle>\r\n                    <Card.Text className=\"text-justify\">{this.props.utilisateur}</Card.Text>\r\n                </Link>\r\n              </Card.Body>\r\n            </Card>\r\n      </CardGroup>     \r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport {API} from \"../constantes\";\r\nimport { Container, Row, Col, Grid } from \"react-bootstrap\";\r\nimport { Rapports } from \"./Rapports\";\r\n\r\nexport class Accueil extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { donneesRecues: [] };\r\n  }\r\n\r\n  //Ajout de la gestion des erreurs\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await fetch(API);\r\n      const reponseDeApi = await response.json();\r\n      this.setState({ donneesRecues: reponseDeApi });\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (      \r\n      <Container>\r\n        <Row>\r\n          <h1 className=\"text-muted mb-3\">Rapports de voyages</h1> \r\n        </Row>\r\n        <Row>\r\n        {this.state.donneesRecues.map((key,i) => (\r\n            <Rapports \r\n                    titre={key.titre}\r\n                    id={key._id}\r\n                    key={key.titre + key._id}\r\n                    utilisateur={key.utilisateur}\r\n                    nouvelle={key.nouvelle} \r\n                    imageURL={key.imageURL}\r\n                    >\r\n            </Rapports>\r\n          ))}\r\n        </Row>\r\n      </Container>      \r\n    );\r\n  }    \r\n}\r\n\r\n","import React from \"react\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport class MenuSansPostBack extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n        <Navbar.Brand href=\"/Accueil\">BlogTours</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n            <NavLink  className=\"mr-3\" exact to=\"/\" >Accueil</NavLink>\r\n            <NavLink  className=\"mr-3\" to=\"/FormAjoutRappVoyage\">Ajouter Voyage</NavLink> \r\n            <NavLink  className=\"mr-3\" to=\"/FormEditerRapport\">Editer Voyage</NavLink> \r\n            <NavLink  className=\"mr-3\" to=\"/ShortenURL\">POST</NavLink>\r\n        </Nav>\r\n       \r\n        </Navbar.Collapse>\r\n        </Navbar>  \r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Form, Button,Image,Container,Row,Col } from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {API} from \"../constantes\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport class FormAjoutRappVoyage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {photo: \"\", setErrors : {}};\r\n\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handlePhoto = this.handlePhoto.bind(this);\r\n    this.addRapport = this.addRapport.bind(this); //addPokemon\r\n  }\r\n\r\n  async addRapport(titre, imageURL, local, rapporVoyage) { \r\n    try{ \r\n      const response = await fetch(API, { \r\n        method:'POST', \r\n        headers: {'Content-Type': 'application/json'  }, \r\n        body:JSON.stringify({\r\n          titre: titre,\r\n          imageURL: imageURL,\r\n          rapporVoyage: rapporVoyage,\r\n          nouvelle: local \r\n        }) \r\n      }); \r\n      if(response.ok){ \r\n        const jsonResponse = await response.json(); \r\n        this.props.history.push(\"/\");\r\n        toast.success(\"Ajout du Rapport \" + titre);\r\n\r\n        return jsonResponse; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n}\r\n\r\n\r\n  handleAdd(event){\r\n    event.preventDefault();\r\n    \r\n    const titre = document.getElementById('titre').value;\r\n    const imageURL = document.getElementById('imageURL').value;\r\n    const nouvelle = document.getElementById('nouvelle').value;\r\n    const rapporVoyage = document.getElementById('rapporVoyage').value;\r\n\r\n    this.addRapport(titre,  imageURL, nouvelle, rapporVoyage);\r\n  }\r\n\r\n  handlePhoto(event){\r\n    const photos = document.getElementById(' imageURL').value;\r\n    this.setState( { imageURL : photos});\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(this.props.history);\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group controlId=\"titre\">\r\n                <Form.Label>Titre rapport de voyage</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le titre\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"photoPokemon\">\r\n                <Form.Label>URL d'une photo de la destination</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer une URL valide\" onBlur={this.handlePhoto}/>\r\n              </Form.Group>\r\n              {this.state.imageURL !== \"\" && <Image src={this.state.imageURL} rounded width=\"125\"/>}\r\n              <Form.Group controlId=\"nouvelle\">\r\n                <Form.Label>Local</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom de votre destination de voyage\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"rapporVoyage\">\r\n                <Form.Label>Racontez votre histoire de voyage</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer votre rapport de voyage\" />\r\n              </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={this.handleAdd}>\r\n                Enregistrer\r\n            </Button>\r\n            </Form>  \r\n            </Col>    \r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}","import React , {useState , useEffect} from \"react\";\r\nimport { Form, Button,Image,Container,Row,Col } from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {API} from \"../constantes\";\r\nimport {toast} from \"react-toastify\"\r\n\r\nfunction FormEditerRapports(props){\r\n  const [donneesRecues , setDonneesRecues] = useState({titre: \"\", imageURL: \"\", nouvelle : \"\", utilisateur: \"\", rapporVoyage: \"\" });\r\n  const [voyageID , setVoyageID] = useState(props.location.search.substring(5,props.location.search.length));\r\n  const [images , setImage] = useState(\"\");\r\n  //Ajout de la gestion des erreurs\r\n  useEffect(() => {\r\n    getVoyageInfos();\r\n  },[]); //Si on enlève le second paramètre, on obtient une boucle infinie.\r\n\r\n  //On récupère le Pokemon pour ensuite remplir le formulaire.\r\n  async function getVoyageInfos() {\r\n    try {\r\n      \r\n      const response = await fetch(API + voyageID);\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function editVoyage(titre,image,nouvelle,utilisateur,rapporVoyage) { \r\n    try{ \r\n      const response = await fetch(API + voyageID, { \r\n        method:'PUT', \r\n        headers: {'Content-Type': 'application/json'  }, \r\n        body:JSON.stringify({\r\n          titre: titre,\r\n          imageURL: image,\r\n          utilisateur: utilisateur,\r\n          rapporVoyage: rapporVoyage\r\n          }) \r\n      }); \r\n      if(response.ok){ \r\n        props.history.push(\"/\");\r\n        toast.success(\"Modification de voyage\" + titre);\r\n\r\n        return response; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n}\r\n\r\nasync function removeVoyage() { \r\n    try{ \r\n    const response = await fetch(API + voyageID, { \r\n      method:'delete', \r\n    }); \r\n    if(response.ok){ \r\n      //const jsonResponse = await response.json(); \r\n      props.history.push(\"/\");\r\n      toast.error(\"Supression de voyage \");\r\n\r\n      return response; \r\n    } \r\n    throw new Error('Request failed!'); \r\n} \r\n catch(error){ \r\n    console.log(error); \r\n } \r\n}\r\n\r\n  function handleEdit(event){\r\n    event.preventDefault();\r\n    \r\n    const titre = document.getElementById('titreVoyage').value;\r\n    const image = document.getElementById('imageVoyage').value;\r\n    const nouvelle = document.getElementById('destinationVoyage').value;\r\n    const utilisateur = document.getElementById('utilisateurVoyage').value;\r\n    const rapporVoyage = document.getElementById('rapportVoyage').value;\r\n\r\n   editVoyage(titre,image,nouvelle,utilisateur,rapporVoyage);\r\n  }\r\n\r\n  function handlePhoto(event){\r\n    const images = document.getElementById('imageVoyage').value;\r\n    setImage(images);\r\n  }\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group controlId=\"titreVoyage\">\r\n                <Form.Label>Titre voyage</Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={donneesRecues.titre}/> {/*/ Faire le test avec value*/}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"imageVoyage\">\r\n                <Form.Label>URL d'une photo de la destination</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer une URL valide\" onBlur={handlePhoto} defaultValue={donneesRecues.imageURL}/>\r\n              </Form.Group>\r\n              {donneesRecues.imageURL !== \"\" && <Image src={donneesRecues.imageURL} rounded width=\"125\"/>}\r\n              <Form.Group controlId=\"destinationVoyage\">\r\n                <Form.Label>Destination</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Ex: New York, Ny, USA\"  defaultValue={donneesRecues.nouvelle}/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"utilisateurVoyage\">\r\n                <Form.Label>Nom de l'utilisateur</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom de l'utisateur\"  defaultValue={donneesRecues.utilisateur}/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"rapportVoyage\">\r\n                <Form.Label>Description de voyage</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Description de voyage\" defaultValue={donneesRecues.rapporVoyage}/> {/*/ Faire le test avec value*/}\r\n              </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleEdit}>\r\n                Enregistrer\r\n            </Button>\r\n            </Form>  \r\n            </Col>    \r\n          </Row>\r\n          <p className=\"btn btn-danger mt-5\" onClick={removeVoyage}>Supprimer voyage</p>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  export default FormEditerRapports;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav, NavLink } from 'react-bootstrap';\nimport logo from './img/pwa.png';\nimport BoutonInstallPWA from './components/BoutonInstallPWA';\nimport { Accueil } from './components/Accueil';\nimport { MenuSansPostBack } from './components/MenuSansPostBack';\nimport { FormAjoutRappVoyage } from './components/FormAjoutRappVoyage';\nimport FormEditerRapport from './components/FormEditerRapport';\nimport {Route} from 'react-router-dom' \nimport './App.sass'\n\n\nfunction App() {\n  return (\n  <>\n    <MenuSansPostBack/> \n      <Route path=\"/\" exact component={Accueil}/>\n      <Route path=\"/FormAjoutRappVoyage\" component={FormAjoutRappVoyage}/>\n      <Route path=\"/FormEditerRapport\" component={FormEditerRapport}/>\n    <BoutonInstallPWA/>  \n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router} from 'react-router-dom' \n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}